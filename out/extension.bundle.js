(()=>{var n={517:(n,e,t)=>{const a=t(93),i=t(783);n.exports={initializeCitySetting:async function(){const n=i.map((n=>n.name)).sort(),e=await a.window.showQuickPick(n,{placeHolder:"Pilih kota Anda untuk pengingat doa harian"});if(e){const n=a.workspace.getConfiguration("doaHarianKatolik");await n.update("city",e,a.ConfigurationTarget.Global),a.window.showInformationMessage(`Kota telah diatur ke ${e} untuk pengingat doa.`)}else a.window.showWarningMessage("Pengaturan kota dibatalkan.")}}},497:(n,e,t)=>{const a=t(93),{showLiturgicalCalendar:i}=t(830),{initializePrayerReminders:o}=t(823),{initializeCitySetting:r}=t(517);n.exports={activate:function(n){const e=a.window.createStatusBarItem(a.StatusBarAlignment.Right,100);e.text="$(calendar) Doa Harian Katolik",e.tooltip="Klik untuk melihat kalender atau pengaturan pengingat doa harian",e.command="doa-harian-katolik.showOptions",e.show(),n.subscriptions.push(e);const t=a.commands.registerCommand("doa-harian-katolik.showOptions",(async()=>{const n=await a.window.showQuickPick(["Tampilkan Kalender Liturgi","Pengaturan Kota dan Pengingat Doa"],{placeHolder:"Pilih opsi"});"Tampilkan Kalender Liturgi"===n?i():"Pengaturan Kota dan Pengingat Doa"===n&&(await r(),a.commands.executeCommand("workbench.action.openSettings","doaHarianKatolik"))}));n.subscriptions.push(t),o()},deactivate:function(){}}},830:(n,e,t)=>{const a=t(93),i=t(938),o=t(217);function r(n){return`\n        <!DOCTYPE html>\n        <html lang="id">\n        <head>\n            <meta charset="UTF-8">\n            <title>Error</title>\n            <style>\n                body { \n                    font-family: Arial, sans-serif; \n                    background-color: #1e1e1e; \n                    color: #d4d4d4; \n                    padding: 20px; \n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    height: 100vh;\n                    margin: 0;\n                }\n                .error-container {\n                    background-color: #2d2d2d;\n                    padding: 20px;\n                    border-radius: 10px;\n                    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\n                    max-width: 600px;\n                    text-align: center;\n                }\n                .error-title {\n                    color: #ff5555;\n                    font-size: 1.8em;\n                    font-weight: bold;\n                    margin-bottom: 15px;\n                }\n                .error-message {\n                    color: #e0e0e0;\n                    font-size: 1em;\n                    margin-bottom: 10px;\n                    line-height: 1.6;\n                }\n                .error-icon {\n                    font-size: 3em;\n                    color: #ff5555;\n                    margin-bottom: 15px;\n                }\n                .retry-button {\n                    background-color: #61dafb;\n                    color: #1e1e1e;\n                    padding: 10px 20px;\n                    border-radius: 5px;\n                    border: none;\n                    cursor: pointer;\n                    font-size: 1em;\n                    font-weight: bold;\n                    transition: background-color 0.3s;\n                }\n                .retry-button:hover {\n                    background-color: #4fc3f7;\n                }\n            </style>\n        </head>\n        <body>\n            <div class="error-container">\n                <div class="error-icon">⚠️</div>\n                <div class="error-title">Terjadi Kesalahan</div>\n                <div class="error-message">${n}</div>\n                <button class="retry-button" onclick="history.back()">Coba Lagi</button>\n            </div>\n        </body>\n        </html>\n    `}n.exports={showLiturgicalCalendar:async function(){const n=a.window.createWebviewPanel("liturgicalCalendar","Kalender Liturgi",a.ViewColumn.One,{enableScripts:!0});n.webview.html=`\n        <!DOCTYPE html>\n        <html lang="id">\n        <head>\n            <meta charset="UTF-8">\n            <title>Loading</title>\n            <style>\n                body { font-family: Arial, sans-serif; background-color: #121212; color: #e0e0e0; padding: 20px; }\n                h1 { color: #ffffff; text-align: center; margin-bottom: 20px; }\n                .container { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; max-width: 1200px; margin: auto; }\n                .card {\n                    background-color: #1f1f1f;\n                    border-radius: 10px;\n                    padding: 20px;\n                    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n                    transition: transform 0.2s;\n                }\n                /* Skeleton loading styles */\n                .skeleton {\n                    position: relative;\n                    overflow: hidden;\n                }\n                .skeleton::before {\n                    content: '';\n                    position: absolute;\n                    top: 0;\n                    left: -150px;\n                    height: 100%;\n                    width: 150px;\n                    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n                    animation: loading 1.5s infinite;\n                }\n                @keyframes loading {\n                    0% { left: -150px; }\n                    100% { left: 100%; }\n                }\n                .skeleton-date, .skeleton-event, .skeleton-reading, .skeleton-color {\n                    background-color: #333;\n                    border-radius: 4px;\n                    margin: 10px 0;\n                }\n                .skeleton-date {\n                    width: 70%;\n                    height: 20px;\n                    margin-bottom: 15px;\n                }\n                .skeleton-event {\n                    width: 50%;\n                    height: 16px;\n                    margin-bottom: 10px;\n                }\n                .skeleton-reading {\n                    width: 90%;\n                    height: 12px;\n                }\n                .skeleton-color {\n                    width: 30%;\n                    height: 12px;\n                    margin-top: 20px;\n                }\n            </style>\n        </head>\n        <body>\n            <h1>Memuat Kalender Liturgi...</h1>\n            <div class="container">${Array(6).fill('\n        <div class="card skeleton">\n            <div class="skeleton-date"></div>\n            <div class="skeleton-event"></div>\n            <div class="skeleton-reading"></div>\n            <div class="skeleton-reading"></div>\n            <div class="skeleton-reading"></div>\n            <div class="skeleton-color"></div>\n        </div>\n    ').join("")}</div>\n        </body>\n        </html>\n    `;const e=(new Date).getFullYear(),t=Array.from({length:4},((n,t)=>(e-2+t).toString())),s=await a.window.showQuickPick(t,{placeHolder:"Pilih Tahun"});if(!s)return void(n.webview.html=r("Tahun tidak dipilih. Silakan pilih tahun terlebih dahulu."));const l=[{label:"Januari",value:"01"},{label:"Februari",value:"02"},{label:"Maret",value:"03"},{label:"April",value:"04"},{label:"Mei",value:"05"},{label:"Juni",value:"06"},{label:"Juli",value:"07"},{label:"Agustus",value:"08"},{label:"September",value:"09"},{label:"Oktober",value:"10"},{label:"November",value:"11"},{label:"Desember",value:"12"}],d=await a.window.showQuickPick(l.map((n=>n.label)),{placeHolder:"Pilih Bulan"});if(!d)return void(n.webview.html=r("Bulan tidak dipilih. Silakan pilih bulan terlebih dahulu."));const c=`${s}-${l.find((n=>n.label===d)).value}`,p=await async function(n){const e=`https://www.imankatolik.or.id/kalender.php?t=${n.slice(0,4)}&b=${n.slice(5,7)}`;try{const t=await i.get(e),a=o.load(t.data),r=[];return a(".k_tbl_td").each(((e,t)=>{const i=a(t).find(".k_tgl").text().trim(),o=a(t).find(".k_perayaan").text().trim(),s=a(t).find(".k_alkitab a"),l=[];s.each(((n,e)=>{const t=a(e).text().trim(),i=a(e).attr("href");i&&l.push({text:t,url:`https://www.imankatolik.or.id${i}`})}));const d=a(t).find(".k_pakaian").text().replace("Warna Liturgi ","").trim();i&&r.push({localDate:`${i} ${n.slice(5,7)} ${n.slice(0,4)}`,name:o,readings:l,color:d})})),r}catch(n){return a.window.showErrorMessage("Gagal mengambil data kalender liturgi."),console.error("Error fetching calendar data:",n),[]}}(c);Array.isArray(p)&&p.length>0?(n.webview.html=function(n){const e={Hijau:"#00FF00",Putih:"#FFFFFF",Ungu:"#800080",Merah:"#FF0000",Kuning:"#FFFF00",Hitam:"#000000"};return`\n        <!DOCTYPE html>\n        <html lang="id">\n        <head>\n            <meta charset="UTF-8">\n            <title>Kalender Liturgi</title>\n            <style>\n                body { font-family: Arial, sans-serif; background-color: #121212; color: #e0e0e0; padding: 20px; }\n                h1 { color: #ffffff; text-align: center; margin-bottom: 20px; }\n                .container { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; max-width: 1200px; margin: auto; }\n                .card {\n                    background-color: #1f1f1f;\n                    border-radius: 10px;\n                    padding: 20px;\n                    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n                    transition: transform 0.2s;\n                }\n                .card:hover {\n                    transform: translateY(-5px);\n                    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3);\n                }\n                .date {\n                    font-size: 1.2em;\n                    font-weight: bold;\n                    color: #bb86fc;\n                    margin-bottom: 10px;\n                }\n                .event {\n                    font-size: 1em;\n                    margin-bottom: 10px;\n                    color: #fca311;\n                }\n                .readings {\n                    list-style-type: none;\n                    padding: 0;\n                    margin: 10px 0;\n                }\n                .readings li {\n                    margin: 5px 0;\n                }\n                .readings a {\n                    color: #03dac5;\n                    text-decoration: none;\n                    transition: color 0.2s;\n                }\n                .readings a:hover {\n                    color: #bb86fc;\n                    text-decoration: underline;\n                }\n                .liturgical-color {\n                    display: flex;\n                    align-items: center;\n                    font-size: 0.9em;\n                    color: #f4f4f4;\n                }\n                .color-pill {\n                    display: inline-block;\n                    width: 16px;\n                    height: 16px;\n                    border-radius: 50%;\n                    margin-right: 5px;\n                }\n            </style>\n        </head>\n        <body>\n            <h1>Kalender Liturgi</h1>\n            <div class="container">${n.map((n=>{return`\n        <div class="card">\n            <h3 class="date">${function(n){const[e,t,a]=n.split(" ");return`${parseInt(e,10)} ${["","Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","November","Desember"][parseInt(t,10)]} ${a}`}(n.localDate)}</h3>\n            <p class="event"><strong>Perayaan:</strong> ${n.name}</p>\n            <p><strong>Bacaan:</strong></p>\n            <ul class="readings">\n                ${n.readings.map((n=>`\n                    <li><a href="#" data-url="${n.url}" class="reading-link">${n.text}</a></li>\n                `)).join("")}\n            </ul>\n            <p class="liturgical-color"><strong>Warna Liturgi: </strong> ${t=n.color,t.split("/").map((n=>e[n.trim()]||"#d4d4d4")).map((n=>`<span class="color-pill" style="background-color: ${n};"></span>`)).join("")}</p>\n        </div>\n    `;var t})).join("")}</div>\n            <script>\n                const vscode = acquireVsCodeApi();\n                document.querySelectorAll('.reading-link').forEach(link => {\n                    link.addEventListener('click', (event) => {\n                        event.preventDefault();\n                        vscode.postMessage({\n                            command: 'fetchReadingDetails',\n                            url: event.target.getAttribute('data-url')\n                        });\n                    });\n                });\n            <\/script>\n        </body>\n        </html>\n    `}(p),n.webview.onDidReceiveMessage((async n=>{"fetchReadingDetails"===n.command&&await async function(n){const e=a.window.createWebviewPanel("readingDetails","Detail Bacaan",a.ViewColumn.One,{enableScripts:!0});e.webview.html=`\n        <!DOCTYPE html>\n        <html lang="id">\n        <head>\n            <meta charset="UTF-8">\n            <title>Loading Detail Bacaan</title>\n            <style>\n                body { \n                    font-family: Arial, sans-serif; \n                    background-color: #1e1e1e; \n                    color: #d4d4d4; \n                    padding: 20px; \n                    max-width: 800px;\n                    margin: auto;\n                }\n                h2 {\n                    color: #bb86fc;\n                    text-align: center;\n                    font-size: 1.8em;\n                    margin-bottom: 20px;\n                }\n                .container {\n                    background-color: #2d2d2d;\n                    padding: 20px;\n                    border-radius: 10px;\n                    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\n                }\n                /* Skeleton styles */\n                .skeleton-verse, .skeleton-text {\n                    background-color: #333;\n                    border-radius: 4px;\n                    position: relative;\n                    overflow: hidden;\n                    margin-bottom: 10px;\n                }\n                .skeleton-verse {\n                    width: 30%;\n                    height: 20px;\n                }\n                .skeleton-text {\n                    width: 90%;\n                    height: 16px;\n                }\n                .skeleton-text.short {\n                    width: 70%;\n                }\n                /* Skeleton loading animation */\n                .skeleton-verse::before, .skeleton-text::before {\n                    content: '';\n                    position: absolute;\n                    top: 0;\n                    left: -150px;\n                    height: 100%;\n                    width: 150px;\n                    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n                    animation: loading 1.5s infinite;\n                }\n                @keyframes loading {\n                    0% { left: -150px; }\n                    100% { left: 100%; }\n                }\n                .separator {\n                    height: 1px;\n                    background-color: #444;\n                    border: none;\n                    margin: 15px 0;\n                }\n            </style>\n        </head>\n        <body>\n            <div class="container">\n                <h2>Memuat Detail Bacaan...</h2>\n                ${Array(5).fill('\n        <div class="skeleton-verse"></div>\n        <div class="skeleton-text"></div>\n        <div class="skeleton-text short"></div>\n        <hr class="separator">\n    ').join("")}\n            </div>\n        </body>\n        </html>\n    `;try{const t=await i.get(n),a=o.load(t.data);let r="";a("table tr").each(((n,e)=>{const t=a(e).find("td.v b").text().trim(),i=a(e).find("td.v").last().text().trim();t&&i&&(r+=`\n                    <div class="verse-container">\n                        <p class="verse">${t}</p>\n                        <button class="copy-button" data-text="${t}: ${i}" title="Copy">\n                            <i class="fas fa-copy"></i>\n                        </button>\n                    </div>\n                    <p class="text">${i}</p>\n                    <hr class="separator">\n                `)})),r||(r="<p>Bacaan tidak ditemukan atau format tidak sesuai.</p>"),e.webview.html=function(n){return`\n        <!DOCTYPE html>\n        <html lang="id">\n        <head>\n            <meta charset="UTF-8">\n            <title>Detail Bacaan</title>\n            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n            <style>\n                body { \n                    font-family: Arial, sans-serif; \n                    background-color: #1e1e1e; \n                    color: #d4d4d4; \n                    padding: 20px; \n                    line-height: 1.6;\n                    max-width: 800px;\n                    margin: auto;\n                }\n                h2 {\n                    color: #bb86fc;\n                    text-align: center;\n                    font-size: 1.8em;\n                    margin-bottom: 20px;\n                }\n                .verse-container {\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                }\n                .verse {\n                    color: #61dafb;\n                    font-weight: bold;\n                    margin-bottom: 5px;\n                    flex: 1;\n                }\n                .text {\n                    color: #e0e0e0;\n                    font-size: 1em;\n                    margin-bottom: 15px;\n                    padding-left: 10px;\n                    border-left: 3px solid #61dafb;\n                }\n                .separator {\n                    margin: 25px 0;\n                    height: 1px;\n                    background-color: #444;\n                    border: none;\n                }\n                .container {\n                    background-color: #2d2d2d;\n                    padding: 20px;\n                    border-radius: 10px;\n                    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\n                }\n                .copy-button {\n                    background: none;\n                    border: none;\n                    color: #61dafb;\n                    font-size: 1.2em;\n                    cursor: pointer;\n                    transition: color 0.2s;\n                }\n                .copy-button:hover {\n                    color: #bb86fc;\n                }\n                /* Toast Styles */\n                .toast {\n                    visibility: hidden;\n                    min-width: 200px;\n                    margin-left: -100px;\n                    background-color: #323232;\n                    color: #ffffff;\n                    text-align: center;\n                    border-radius: 8px;\n                    padding: 16px;\n                    position: fixed;\n                    z-index: 1;\n                    bottom: 30px;\n                    left: 50%;\n                    font-size: 17px;\n                    opacity: 0;\n                    transition: opacity 0.5s, visibility 0.5s;\n                }\n                .toast.show {\n                    visibility: visible;\n                    opacity: 1;\n                }\n            </style>\n        </head>\n        <body>\n            <div class="container">\n                <h2>Detail Bacaan</h2>\n                ${n}\n            </div>\n            \x3c!-- Toast Notification --\x3e\n            <div id="copyToast" class="toast">Teks berhasil disalin</div>\n            <script>\n                const vscode = acquireVsCodeApi();\n                // Fungsi untuk menampilkan toast\n                function showToast() {\n                    const toast = document.getElementById("copyToast");\n                    toast.classList.add("show");\n                    setTimeout(() => {\n                        toast.classList.remove("show");\n                    }, 3000);\n                }\n                // Menambahkan event listener untuk tombol copy\n                document.querySelectorAll('.copy-button').forEach(button => {\n                    button.addEventListener('click', () => {\n                        const text = button.getAttribute('data-text');\n                        navigator.clipboard.writeText(text).then(() => {\n                            showToast(); // Tampilkan toast setelah teks disalin\n                            button.innerHTML = '<i class="fas fa-check"></i>';\n                            setTimeout(() => {\n                                button.innerHTML = '<i class="fas fa-copy"></i>';\n                            }, 2000);\n                        }).catch(err => {\n                            console.error('Gagal menyalin teks: ', err);\n                        });\n                    });\n                });\n            <\/script>\n        </body>\n        </html>\n    `}(r)}catch(n){console.error("Error fetching reading details:",n),e.webview.html=r("Gagal memuat data bacaan. Periksa koneksi internet Anda dan coba lagi.")}}(n.url)}))):n.webview.html=r("Gagal memuat data kalender. Silakan coba lagi.")}}},823:(n,e,t)=>{const a=t(93),i=t(812),o=t(783),r=t(267);function s(n){console.log(`[DEBUG] ${n}`)}function l(n,e,t,o,r=!1){const l=()=>{const d=i.tz(t),c=i.tz(n,"HH:mm",t).subtract(o,"minutes");c.isBefore(d)&&c.add(1,"day");const p=r?1e4:c.diff(d);s(`Pengaturan reminder untuk ${e}:`),s(`Waktu sekarang di ${t}: ${d.format("YYYY-MM-DD HH:mm:ss")}`),s(`Waktu target notifikasi untuk ${e} di ${t}: ${c.format("YYYY-MM-DD HH:mm:ss")}`),s(`Delay: ${p} ms`),setTimeout((()=>{a.window.showInformationMessage(`Reminder: ${e} akan dimulai dalam ${o} menit.`),s(`Reminder: ${e} ditampilkan pada ${i().format("YYYY-MM-DD HH:mm:ss")}`),l()}),p)};l()}n.exports={initializePrayerReminders:async function(){const n=a.workspace.getConfiguration("doaHarianKatolik"),e=n.get("city","Jakarta"),t=function(n){const e=o.find((e=>e.name.toLowerCase()===n.toLowerCase()));if(e){const[t,a]=e.loc.coordinates,i=r(a,t);return s(`Kota ditemukan: ${n}, Timezone: ${i}`),i}return a.window.showErrorMessage(`Kota ${n} tidak ditemukan.`),s(`Kota ${n} tidak ditemukan dalam all-the-cities`),null}(e)||"Asia/Jakarta",i=n.get("reminderMinutesBefore",5),d=n.get("debugMode",!1);s(`Inisialisasi reminder untuk ${e} dengan timezone ${t} dan debugMode ${d}`),l("06:00","Doa Angelus pagi",t,i,d),l("12:00","Doa Angelus siang",t,i,d),l("15:00","Doa Kerahiman Ilahi",t,i,d),d&&(a.window.showInformationMessage("Mode debug aktif: Reminder akan berjalan setiap 10 detik."),s("Mode debug aktif, pengingat akan berjalan setiap 10 detik"))}}},783:n=>{"use strict";n.exports=require("all-the-cities")},938:n=>{"use strict";n.exports=require("axios")},217:n=>{"use strict";n.exports=require("cheerio")},812:n=>{"use strict";n.exports=require("moment-timezone")},267:n=>{"use strict";n.exports=require("tz-lookup")},93:n=>{"use strict";n.exports=vscode}},e={};!function t(a){var i=e[a];if(void 0!==i)return i.exports;var o=e[a]={exports:{}};return n[a](o,o.exports,t),o.exports}(497)})();